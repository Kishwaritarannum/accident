{"ast":null,"code":"import value from '../../../../assets/scss/_themes-vars.scss';\nimport { useState } from 'react';\nimport axios from 'axios';\nconst [count, setCount] = useState(0);\nconst fetchTest = () => {\n  axios.get(\"http://localhost:5000/count\").then(res => setCount(JSON.stringify(res.data[0]['count']))).catch(err => console.log(err));\n  // setTotalItems(res.data.length);\n\n  // setCount(res.data['count'])\n\n  // console.log(JSON.stringify(res.data));\n  // Object.keys(res.data).map((key, index) => {\n  //     let value = res.data[key];\n  //     if (value['newold'] == 'Old') {\n  //         console.log('yes');\n  //     }\n\n  // fetch('http://localhost:5000/count')\n  // .then((res)=>console.log(res.json()))\n};\n// useEffect(()=>{\n//   handleDelete()\n\n// },[]);\n\nuseEffect(() => {\n  // fetch('http://localhost:5000/count')\n  // .then((res)=>console.log(res.json()))\n  // .then((data)=>{\n  //   // setCount(data['count']);\n  //   console.log(data)\n  // })\n  // .catch((err)=>console.log(err));\n  fetchTest();\n}, []);\n// import Chart from 'react-apexcharts';\n\n// const DynamicallySetItems = () => {\n//     const [totalItems, setTotalItems] = useState();\n//     const FetchItems = async () => {\n//         try {\n//             const res = await axios.get('localhost:5000/image');\n//             setTotalItems(res.data.length);\n//         } catch (err) {}\n//     };\n//     FetchItems();\n// };\n\nexport default {\n  height: 228,\n  type: 'pie',\n  options: {\n    dataLabels: {\n      enabled: false\n    },\n    labels: ['Total Items', 'Incoming', 'Outgoing'],\n    legend: {\n      show: true,\n      position: 'bottom',\n      fontFamily: 'inherit',\n      labels: {\n        colors: 'inherit'\n      }\n    },\n    itemMargin: {\n      horizontal: 10,\n      vertical: 10\n    },\n    colors: [value.error, value.primary, value.info]\n  },\n  series: [{\n    count\n  }, 10, 12]\n};","map":{"version":3,"names":["value","useState","axios","count","setCount","fetchTest","get","then","res","JSON","stringify","data","catch","err","console","log","useEffect","height","type","options","dataLabels","enabled","labels","legend","show","position","fontFamily","colors","itemMargin","horizontal","vertical","error","primary","info","series"],"sources":["C:/logs/webcam project/frontend/src/views/Dashboard/Default/chart/revenu-chart.js"],"sourcesContent":["import value from '../../../../assets/scss/_themes-vars.scss';\nimport { useState } from 'react';\nimport axios from 'axios';\n\nconst[count,setCount]= useState(0);\n\n\nconst fetchTest =  () => {\n \n    axios.get(\"http://localhost:5000/count\")\n    .then((res)=>setCount(JSON.stringify(res.data[0]['count'])))\n    .catch((err)=>console.log(err))\n    ;\n    // setTotalItems(res.data.length);\n    \n    // setCount(res.data['count'])\n\n    // console.log(JSON.stringify(res.data));\n    // Object.keys(res.data).map((key, index) => {\n    //     let value = res.data[key];\n    //     if (value['newold'] == 'Old') {\n    //         console.log('yes');\n    //     }\n  \n  // fetch('http://localhost:5000/count')\n  // .then((res)=>console.log(res.json()))\n};\n// useEffect(()=>{\n//   handleDelete()\n \n  \n// },[]);\n\nuseEffect(()=>{\n  // fetch('http://localhost:5000/count')\n  // .then((res)=>console.log(res.json()))\n  // .then((data)=>{\n  //   // setCount(data['count']);\n  //   console.log(data)\n  // })\n  // .catch((err)=>console.log(err));\n  fetchTest()\n \n  \n},[]);\n// import Chart from 'react-apexcharts';\n\n// const DynamicallySetItems = () => {\n//     const [totalItems, setTotalItems] = useState();\n//     const FetchItems = async () => {\n//         try {\n//             const res = await axios.get('localhost:5000/image');\n//             setTotalItems(res.data.length);\n//         } catch (err) {}\n//     };\n//     FetchItems();\n// };\n\n\nexport default {\n\n    \n\n\n  \n    height: 228,\n    type: 'pie',\n    options: {\n        dataLabels: {\n            enabled: false,\n        },\n        labels: ['Total Items', 'Incoming', 'Outgoing'],\n        legend: {\n            show: true,\n            position: 'bottom',\n            fontFamily: 'inherit',\n            labels: {\n                colors: 'inherit',\n            },\n        },\n        itemMargin: {\n            horizontal: 10,\n            vertical: 10,\n        },\n        colors: [value.error, value.primary, value.info],\n    },\n    series: [{count}, 10, 12],\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,2CAA2C;AAC7D,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAK,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAEH,QAAQ,CAAC,CAAC,CAAC;AAGlC,MAAMI,SAAS,GAAIA,CAAA,KAAM;EAErBH,KAAK,CAACI,GAAG,CAAC,6BAA6B,CAAC,CACvCC,IAAI,CAAEC,GAAG,IAAGJ,QAAQ,CAACK,IAAI,CAACC,SAAS,CAACF,GAAG,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAC3DC,KAAK,CAAEC,GAAG,IAAGC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EAE/B;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEF;EACA;AACF,CAAC;AACD;AACA;;AAGA;;AAEAG,SAAS,CAAC,MAAI;EACZ;EACA;EACA;EACA;EACA;EACA;EACA;EACAX,SAAS,EAAE;AAGb,CAAC,EAAC,EAAE,CAAC;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,eAAe;EAMXY,MAAM,EAAE,GAAG;EACXC,IAAI,EAAE,KAAK;EACXC,OAAO,EAAE;IACLC,UAAU,EAAE;MACRC,OAAO,EAAE;IACb,CAAC;IACDC,MAAM,EAAE,CAAC,aAAa,EAAE,UAAU,EAAE,UAAU,CAAC;IAC/CC,MAAM,EAAE;MACJC,IAAI,EAAE,IAAI;MACVC,QAAQ,EAAE,QAAQ;MAClBC,UAAU,EAAE,SAAS;MACrBJ,MAAM,EAAE;QACJK,MAAM,EAAE;MACZ;IACJ,CAAC;IACDC,UAAU,EAAE;MACRC,UAAU,EAAE,EAAE;MACdC,QAAQ,EAAE;IACd,CAAC;IACDH,MAAM,EAAE,CAAC3B,KAAK,CAAC+B,KAAK,EAAE/B,KAAK,CAACgC,OAAO,EAAEhC,KAAK,CAACiC,IAAI;EACnD,CAAC;EACDC,MAAM,EAAE,CAAC;IAAC/B;EAAK,CAAC,EAAE,EAAE,EAAE,EAAE;AAC5B,CAAC"},"metadata":{},"sourceType":"module"}