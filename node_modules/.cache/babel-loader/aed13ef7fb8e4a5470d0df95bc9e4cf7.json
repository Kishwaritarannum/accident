{"ast":null,"code":"var _jsxFileName = \"C:\\\\logs\\\\webcam project\\\\frontend\\\\src\\\\layout\\\\MainLayout\\\\Header\\\\NotificationSection\\\\index.js\";\nimport React from 'react';\nimport { makeStyles, Button, Chip, ClickAwayListener, Fade, Grid, Paper, Popper, Avatar, List, ListItem, ListItemAvatar, ListItemText, ListSubheader, ListItemSecondaryAction, Typography } from '@material-ui/core';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport QueryBuilderTwoToneIcon from '@material-ui/icons/QueryBuilderTwoTone';\nimport NotificationsNoneTwoToneIcon from '@material-ui/icons/NotificationsNoneTwoTone';\nimport User1 from './../../../../assets/images/users/avatar-1.jpg';\nimport User2 from './../../../../assets/images/users/avatar-2.jpg';\nimport User3 from './../../../../assets/images/users/avatar-3.jpg';\nimport User4 from './../../../../assets/images/users/avatar-4.jpg';\nconst useStyles = () => {\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    // Fetch today's count from the backend API\n    fetch('/api/notifications').then(response => response.json()).then(data => {\n      setCount(data.count);\n    }).catch(error => {\n      console.error('Error retrieving count:', error);\n    });\n  }, []);\n  //     grow: {\n  //         flex: 1,\n  //     },\n  //     root: {\n  //         width: '100%',\n  //         maxWidth: '350px',\n  //         minWidth: '250px',\n  //         backgroundColor: theme.palette.background.paper,\n  //         paddingBottom: 0,\n  //         borderRadius: '10px',\n  //     },\n  //     inline: {\n  //         display: 'inline',\n  //     },\n  //     paper: {\n  //         marginRight: theme.spacing(2),\n  //     },\n  //     subHeader: {\n  //         backgroundColor: theme.palette.grey.A400,\n  //         color: theme.palette.common.white,\n  //         padding: '5px 15px',\n  //     },\n  //     subFooter: {\n  //         backgroundColor: theme.palette.grey.A400,\n  //         color: theme.palette.common.white,\n  //         padding: 0,\n  //     },\n  //     iconButton: {\n  //         padding: '5px',\n  //     },\n  //     showIcon: {\n  //         transform: 'rotate(90deg)',\n  //     },\n  //     listSection: {\n  //         backgroundColor: 'inherit',\n  //         display: 'block',\n  //     },\n  //     ul: {\n  //         backgroundColor: 'inherit',\n  //         padding: 0,\n  //     },\n  //     listAction: {\n  //         top: '22px',\n  //     },\n  //     actionIcon: {\n  //         fontSize: '0.75rem',\n  //         marginRight: '4px',\n  //         color: theme.palette.grey[400],\n  //     },\n  //     actionColor: {\n  //         color: theme.palette.grey[400],\n  //     },\n  //     ScrollHeight: {\n  //         height: '320px',\n  //         overflowX: 'hidden',\n  //     },\n  //     p0: {\n  //         padding: 0,\n  //     },\n  //     pT0: {\n  //         paddingTop: 0,\n  //     },\n  //     menuIIcon: {\n  //         fontSize: '1.5rem',\n  //     },\n  //     menuButton: {\n  //         [theme.breakpoints.down('sm')]: {\n  //             minWidth: '50px',\n  //         },\n  //         [theme.breakpoints.down('xs')]: {\n  //             minWidth: '35px',\n  //         },\n  //     },\n\n  // }));\n\n  const NotificationSection = () => {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const anchorRef = React.useRef(null);\n    const handleToggle = () => {\n      setOpen(prevOpen => !prevOpen);\n    };\n    const handleClose = event => {\n      if (anchorRef.current && anchorRef.current.contains(event.target)) {\n        return;\n      }\n      setOpen(false);\n    };\n    const prevOpen = React.useRef(open);\n    React.useEffect(() => {\n      if (prevOpen.current === true && open === false) {\n        anchorRef.current.focus();\n      }\n      prevOpen.current = open;\n    }, [open]);\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: classes.menuButton,\n      ref: anchorRef,\n      \"aria-controls\": open ? 'menu-list-grow' : undefined,\n      \"aria-haspopup\": \"true\",\n      onClick: handleToggle,\n      color: \"#000000\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NotificationsNoneTwoToneIcon, {\n      className: classes.menuIIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }\n    }), count > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 31\n      }\n    }, count), /*#__PURE__*/React.createElement(\"style\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 7\n      }\n    }, `\n        .badge {\n          background-color: red;\n          color: white;\n          border-radius: 50%;\n          padding: 4px 8px;\n          font-size: 12px;\n          position: absolute;\n          top: -5px;\n          right: -5px;\n        }\n      `)), /*#__PURE__*/React.createElement(Popper, {\n      placement: \"bottom-end\",\n      open: open,\n      anchorEl: anchorRef.current,\n      role: undefined,\n      transition: true,\n      disablePortal: true,\n      popperOptions: {\n        modifiers: {\n          offset: {\n            enable: true,\n            offset: '0px, 10px'\n          },\n          preventOverflow: {\n            padding: 0\n          }\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }\n    }));\n  };\n};\nexport default NotificationSection;","map":{"version":3,"names":["React","makeStyles","Button","Chip","ClickAwayListener","Fade","Grid","Paper","Popper","Avatar","List","ListItem","ListItemAvatar","ListItemText","ListSubheader","ListItemSecondaryAction","Typography","PerfectScrollbar","QueryBuilderTwoToneIcon","NotificationsNoneTwoToneIcon","User1","User2","User3","User4","useStyles","count","setCount","useState","useEffect","fetch","then","response","json","data","catch","error","console","NotificationSection","classes","open","setOpen","anchorRef","useRef","handleToggle","prevOpen","handleClose","event","current","contains","target","focus","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","menuButton","ref","undefined","onClick","color","menuIIcon","placement","anchorEl","role","transition","disablePortal","popperOptions","modifiers","offset","enable","preventOverflow","padding"],"sources":["C:/logs/webcam project/frontend/src/layout/MainLayout/Header/NotificationSection/index.js"],"sourcesContent":["import React from 'react';\n\nimport {\n    makeStyles,\n    Button,\n    Chip,\n    ClickAwayListener,\n    Fade,\n    Grid,\n    Paper,\n    Popper,\n    Avatar,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n    ListSubheader,\n    ListItemSecondaryAction,\n    Typography,\n} from '@material-ui/core';\n\nimport PerfectScrollbar from 'react-perfect-scrollbar';\n\nimport QueryBuilderTwoToneIcon from '@material-ui/icons/QueryBuilderTwoTone';\n\nimport NotificationsNoneTwoToneIcon from '@material-ui/icons/NotificationsNoneTwoTone';\n\nimport User1 from './../../../../assets/images/users/avatar-1.jpg';\nimport User2 from './../../../../assets/images/users/avatar-2.jpg';\nimport User3 from './../../../../assets/images/users/avatar-3.jpg';\nimport User4 from './../../../../assets/images/users/avatar-4.jpg';\n\nconst useStyles = () => {\nconst [count, setCount] = useState(0);\n\n    useEffect(() => {\n      // Fetch today's count from the backend API\n      fetch('/api/notifications')\n        .then(response => response.json())\n        .then(data => {\n          setCount(data.count);\n        })\n        .catch(error => {\n          console.error('Error retrieving count:', error);\n        });\n    }, []);\n//     grow: {\n//         flex: 1,\n//     },\n//     root: {\n//         width: '100%',\n//         maxWidth: '350px',\n//         minWidth: '250px',\n//         backgroundColor: theme.palette.background.paper,\n//         paddingBottom: 0,\n//         borderRadius: '10px',\n//     },\n//     inline: {\n//         display: 'inline',\n//     },\n//     paper: {\n//         marginRight: theme.spacing(2),\n//     },\n//     subHeader: {\n//         backgroundColor: theme.palette.grey.A400,\n//         color: theme.palette.common.white,\n//         padding: '5px 15px',\n//     },\n//     subFooter: {\n//         backgroundColor: theme.palette.grey.A400,\n//         color: theme.palette.common.white,\n//         padding: 0,\n//     },\n//     iconButton: {\n//         padding: '5px',\n//     },\n//     showIcon: {\n//         transform: 'rotate(90deg)',\n//     },\n//     listSection: {\n//         backgroundColor: 'inherit',\n//         display: 'block',\n//     },\n//     ul: {\n//         backgroundColor: 'inherit',\n//         padding: 0,\n//     },\n//     listAction: {\n//         top: '22px',\n//     },\n//     actionIcon: {\n//         fontSize: '0.75rem',\n//         marginRight: '4px',\n//         color: theme.palette.grey[400],\n//     },\n//     actionColor: {\n//         color: theme.palette.grey[400],\n//     },\n//     ScrollHeight: {\n//         height: '320px',\n//         overflowX: 'hidden',\n//     },\n//     p0: {\n//         padding: 0,\n//     },\n//     pT0: {\n//         paddingTop: 0,\n//     },\n//     menuIIcon: {\n//         fontSize: '1.5rem',\n//     },\n//     menuButton: {\n//         [theme.breakpoints.down('sm')]: {\n//             minWidth: '50px',\n//         },\n//         [theme.breakpoints.down('xs')]: {\n//             minWidth: '35px',\n//         },\n//     },\n\n    \n// }));\n\n    const NotificationSection = () => {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const anchorRef = React.useRef(null);\n\n    const handleToggle = () => {\n        setOpen((prevOpen) => !prevOpen);\n    };\n\n    const handleClose = (event) => {\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\n            return;\n        }\n        setOpen(false);\n    };\n\n    const prevOpen = React.useRef(open);\n    React.useEffect(() => {\n        if (prevOpen.current === true && open === false) {\n            anchorRef.current.focus();\n        }\n        prevOpen.current = open;\n    }, [open]);\n\n    return (\n        <React.Fragment>\n            <Button\n                className={classes.menuButton}\n                ref={anchorRef}\n                aria-controls={open ? 'menu-list-grow' : undefined}\n                aria-haspopup=\"true\"\n                onClick={handleToggle}\n                color=\"#000000\"\n            >\n                <NotificationsNoneTwoToneIcon className={classes.menuIIcon} />\n                {count > 0 && <span className=\"badge\">{count}</span>}\n      <style>{`\n        .badge {\n          background-color: red;\n          color: white;\n          border-radius: 50%;\n          padding: 4px 8px;\n          font-size: 12px;\n          position: absolute;\n          top: -5px;\n          right: -5px;\n        }\n      `}</style>\n            </Button>\n            <Popper\n                placement=\"bottom-end\"\n                open={open}\n                anchorEl={anchorRef.current}\n                role={undefined}\n                transition\n                disablePortal\n                popperOptions={{\n                    modifiers: {\n                        offset: {\n                            enable: true,\n                            offset: '0px, 10px',\n                        },\n                        preventOverflow: {\n                            padding: 0,\n                        },\n                    },\n                }}\n            >\n                {/* {({ TransitionProps, placement }) => (\n                    <Fade {...TransitionProps}>\n                        <Paper>\n                            <ClickAwayListener onClickAway={handleClose}>\n                                <List className={classes.root}>\n                                    <PerfectScrollbar className={classes.ScrollHeight}>\n                                        <ListSubheader disableSticky>\n                                            <Chip size=\"small\" color=\"primary\" label=\"New\" />\n                                        </ListSubheader>\n                                        <ListItem button alignItems=\"flex-start\" className={classes.pT0}>\n                                            <ListItemAvatar>\n                                                <Avatar alt=\"John Doe\" src={User1} />\n                                            </ListItemAvatar>\n                                            <ListItemText\n                                                primary={<Typography variant=\"subtitle1\">John Doe</Typography>}\n                                                secondary={<Typography variant=\"subtitle2\">New ticket Added</Typography>}\n                                            />\n                                            <ListItemSecondaryAction className={classes.listAction}>\n                                                <Grid container justify=\"flex-end\">\n                                                    <Grid item>\n                                                        <QueryBuilderTwoToneIcon className={classes.actionIcon} />\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Typography\n                                                            variant=\"caption\"\n                                                            display=\"block\"\n                                                            gutterBottom\n                                                            className={classes.actionColor}\n                                                        >\n                                                            now\n                                                        </Typography>\n                                                    </Grid>\n                                                </Grid>\n                                            </ListItemSecondaryAction>\n                                        </ListItem>\n                                        <ListSubheader disableSticky>\n                                            <Chip size=\"small\" variant=\"outlined\" label=\"EARLIER\" />\n                                        </ListSubheader>\n                                        <ListItem button alignItems=\"flex-start\" className={classes.pT0}>\n                                            <ListItemAvatar>\n                                                <Avatar alt=\"Joseph William\" src={User2} />\n                                            </ListItemAvatar>\n                                            <ListItemText\n                                                primary={<Typography variant=\"subtitle1\">Joseph William</Typography>}\n                                                secondary={<Typography variant=\"subtitle2\">Purchase a new product</Typography>}\n                                            />\n                                            <ListItemSecondaryAction className={classes.listAction}>\n                                                <Grid container justify=\"flex-end\">\n                                                    <Grid item>\n                                                        <QueryBuilderTwoToneIcon className={classes.actionIcon} />\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Typography\n                                                            variant=\"caption\"\n                                                            display=\"block\"\n                                                            gutterBottom\n                                                            className={classes.actionColor}\n                                                        >\n                                                            10 min\n                                                        </Typography>\n                                                    </Grid>\n                                                </Grid>\n                                            </ListItemSecondaryAction>\n                                        </ListItem>\n                                        <ListItem button alignItems=\"flex-start\">\n                                            <ListItemAvatar>\n                                                <Avatar alt=\"Sara Soudein\" src={User3} />\n                                            </ListItemAvatar>\n                                            <ListItemText\n                                                primary={<Typography variant=\"subtitle1\">Sara Soudein</Typography>}\n                                                secondary={<Typography variant=\"subtitle2\">Currently Login</Typography>}\n                                            />\n                                            <ListItemSecondaryAction className={classes.listAction}>\n                                                <Grid container justify=\"flex-end\">\n                                                    <Grid item>\n                                                        <QueryBuilderTwoToneIcon className={classes.actionIcon} />\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Typography\n                                                            variant=\"caption\"\n                                                            display=\"block\"\n                                                            gutterBottom\n                                                            className={classes.actionColor}\n                                                        >\n                                                            12 min\n                                                        </Typography>\n                                                    </Grid>\n                                                </Grid>\n                                            </ListItemSecondaryAction>\n                                        </ListItem>\n                                        <ListItem button alignItems=\"flex-start\">\n                                            <ListItemAvatar>\n                                                <Avatar alt=\"Sepha Wilon\" src={User4} />\n                                            </ListItemAvatar>\n                                            <ListItemText\n                                                primary={<Typography variant=\"subtitle1\">Sepha Wilon</Typography>}\n                                                secondary={<Typography variant=\"subtitle2\">Purchase a new product</Typography>}\n                                            />\n                                            <ListItemSecondaryAction className={classes.listAction}>\n                                                <Grid container justify=\"flex-end\">\n                                                    <Grid item>\n                                                        <QueryBuilderTwoToneIcon className={classes.actionIcon} />\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Typography\n                                                            variant=\"caption\"\n                                                            display=\"block\"\n                                                            gutterBottom\n                                                            className={classes.actionColor}\n                                                        >\n                                                            30 min\n                                                        </Typography>\n                                                    </Grid>\n                                                </Grid>\n                                            </ListItemSecondaryAction>\n                                        </ListItem>\n                                    </PerfectScrollbar>\n                                </List>\n                            </ClickAwayListener>\n                        </Paper>\n                    </Fade>\n                )} */}\n            </Popper>\n        </React.Fragment>\n    );\n            };\n};\n\nexport default NotificationSection;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}