{"ast":null,"code":"var _jsxFileName = \"D:\\\\New folder (2)\\\\frontend\\\\src\\\\views\\\\Dashboard\\\\Default\\\\index.js\";\nimport React from \"react\";\nimport moment from 'moment';\nimport { makeStyles, Grid, Card, CardHeader, CardContent, Hidden, Typography, Divider, LinearProgress } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport value from '../../../assets/scss/_themes-vars.scss';\nimport TrendingUpIcon from \"@material-ui/icons/TrendingUp\";\nimport TrendingDownIcon from \"@material-ui/icons/TrendingDown\";\n// import MonetizationOnTwoTone from '@material-ui/icons/MonetizationOnTwoTone';\nimport DvrIconTwoTone from \"@material-ui/icons/DvrTwoTone\";\nimport DescriptionTwoTone from \"@material-ui/icons/DescriptionTwoTone\";\n// import ThumbUpAltTwoTone from '@material-ui/icons/ThumbUpAltTwoTone';\nimport IndeterminateCheckBoxTwoToneIcon from \"@material-ui/icons/IndeterminateCheckBoxTwoTone\";\nimport CalendarTodayTwoTone from \"@material-ui/icons/CalendarTodayTwoTone\";\nimport SalesLineCard from \"./SalesLineCard\";\nimport SalesLineCardData from \"./chart/sale-chart-1\";\nimport RevenuChartCard from \"./RevenuChartCard\";\nimport RevenuChartCardData from \"./chart/revenu-chart\";\nimport ReportCard from \"./ReportCard\";\nimport LatestorderCard from \"./LatestorderCard\";\nimport { gridSpacing } from \"./../../../store/constant\";\nconst useStyles = makeStyles(theme => ({\n  arrowicon: {\n    \"& svg\": {\n      width: \"20px\",\n      height: \"20px\",\n      verticalAlign: \"top\"\n    }\n  },\n  flatcardbody: {\n    padding: \"0px !important\",\n    \"& svg\": {\n      width: \"40px\",\n      height: \"40px\"\n    }\n  },\n  flatcardblock: {\n    padding: \"25px 25px\",\n    borderLeft: \"1px solid\" + theme.palette.background.default,\n    [theme.breakpoints.down(\"xs\")]: {\n      borderLeft: \"none\",\n      borderBottom: \"10px solid\" + theme.palette.background.default\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      borderBottom: \"10px solid\" + theme.palette.background.default\n    }\n  },\n  textsuccess: {\n    color: theme.palette.success.main\n  },\n  texterror: {\n    color: theme.palette.error.main\n  }\n}));\nconst Default = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [currentDateTime, setCurrentDateTime] = useState(new Date());\n\n  //   const [totalItems, setTotalItems] = useState();\n  //   const [instock, setInStock] = useState();\n  //   const [count, setCount] = useState(0);\n  //   const [count1, setCount1] = useState(0);\n  //   const [counts, setCounts] = useState(0);\n  //   const [count2, setCount2] = useState([]);\n  //   const [count4, setCount4] = useState([]);\n  //   const [barData, setbarData] = useState([]);\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrentDateTime(new Date());\n    }, 1000); // Update every second\n\n    return () => {\n      clearInterval(timer); // Clean up the timer on component unmount\n    };\n  }, []);\n\n  //   useEffect(() => {\n  //       fetch('http://localhost:5000/outofstock')\n  //           .then((res) => res.json())\n  //           .then((data) => {\n  //               setCounts(data[0].total_out_of_stock);\n  //           });\n  //       fetch('http://localhost:5000/count')\n  //           .then((res) => res.json())\n  //           .then((data) => {\n  //               setCount(data[0].count);\n  //           });\n  //       fetch('http://localhost:5000/data/count')\n  //           .then((res) => res.json())\n  //           .then((data) => {\n  //               setCount1(data.count1);\n  //           });\n  //           fetch('http://localhost:5000/barData')\n  //           .then((res) => res.json())\n  //           .then((data) => {\n  //               setbarData(data);\n  //           });\n\n  //      fetch('http://localhost:5000/daily/count')\n  //           .then(response => response.json())\n  //           .then(dataArray => setCount2(dataArray))\n  //           .catch(error => console.log(error));\n\n  //       //fetchTest();\n  //   }, []);\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginLeft: 350\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, currentDateTime.toString())), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: gridSpacing,\n    style: {\n      paddingLeft: \"2rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: gridSpacing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    sm: 6,\n    xs: 12,\n    style: {\n      marginTop: \"30px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ReportCard, {\n    primary: 200\n    //   primary={count}\n    ,\n    secondary: \"Yearly Accident Records\",\n    color: theme.palette.primary.main\n    // footerData=\"10% changes on profit\"\n    ,\n    iconPrimary: DvrIconTwoTone,\n    iconFooter: TrendingUpIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    sm: 6,\n    xs: 12,\n    style: {\n      marginTop: \"30px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ReportCard, {\n    primary: 50\n    //   primary={count1}\n    ,\n    secondary: \"Monthly Accident Records\",\n    color: theme.palette.success.main\n    // footerData=\"10k daily views\"\n    ,\n    iconPrimary: DescriptionTwoTone,\n    iconFooter: TrendingUpIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    sm: 6,\n    xs: 12,\n    style: {\n      marginTop: \"30px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ReportCard, {\n    primary: 10\n    //   primary={counts}\n    ,\n    secondary: \"Today's Accident Records\",\n    color: theme.palette.primary.main\n    // footerData=\"1k download in App store\"\n    ,\n    iconPrimary: IndeterminateCheckBoxTwoToneIcon,\n    iconFooter: TrendingUpIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: gridSpacing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 14,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: gridSpacing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: gridSpacing,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    style: {\n      background: \"white\"\n    },\n    title: /*#__PURE__*/React.createElement(Typography, {\n      t: \"div\",\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }\n    }, \"Total Revenue\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(SalesLineCard, {\n    chartData: {\n      type: 'line',\n      height: 115,\n      options: {\n        chart: {\n          sparkline: {\n            enabled: true\n          }\n        },\n        xaxis: {\n          // type: 'categories',\n          // categories: barData.date,\n          axisBorder: {\n            color: '#c90076' // Set the desired color for the x-axis line\n          },\n\n          labels: {\n            show: true,\n            style: {\n              colors: '#a20076' // Set the desired color for the x-axis labels\n            }\n          },\n\n          title: {\n            text: 'Date',\n            style: {\n              color: '#a20076',\n              fontSize: '12px',\n              fontFamily: 'Helvetica, Arial, sans-serif',\n              fontWeight: 400,\n              cssClass: 'apexcharts-xaxis-title'\n            }\n          }\n        },\n        // dataLabels: {\n        //     enabled: true,\n        // },\n        colors: ['#fff'],\n        // xaxis: {\n        //     categories: ['item 1', 'item 2', 'item 3', 'item 4', 'item 5'],\n        // },\n        tooltip: {\n          theme: 'dark',\n          fixed: {\n            enabled: false\n          },\n          // x: {\n          //     show: false,\n          // },\n          y: {\n            title: {\n              formatter: seriesName => 'Accidents Occur per Months'\n            }\n          },\n          marker: {\n            show: true\n          }\n        }\n      },\n      series: [\n      // {\n      //     name: 'series1',\n      //data: [55, 35, 75, 25, 90, 50],\n      // },\n      {\n        name: 'added to inventory',\n        data: [55, 35, 75, 25, 90, 50, 55, 35, 75, 25, 90, 50]\n\n        // data: barData.countdate\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(RevenuChartCard, {\n    chartData: {\n      height: 228,\n      type: 'pie',\n      options: {\n        dataLabels: {\n          enabled: false\n        },\n        labels: ['Yearly', 'Monthly', 'Todays'],\n        legend: {\n          show: true,\n          position: 'bottom',\n          fontFamily: 'inherit',\n          labels: {\n            colors: 'inherit'\n          }\n        },\n        itemMargin: {\n          horizontal: 10,\n          vertical: 10\n        },\n        colors: [value.error, value.primary, value.info]\n      },\n      // series: [count, count1, counts],\n      series: [200, 50, 10]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: gridSpacing,\n    style: {\n      paddingLeft: \"2rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: gridSpacing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    sm: 6,\n    xs: 12,\n    style: {\n      marginTop: \"75px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SalesLineCard, {\n    chartData: {\n      type: 'bar',\n      height: 50,\n      options: {\n        chart: {\n          sparkline: {\n            enabled: true\n          }\n        },\n        xaxis: {\n          type: 'categories',\n          //  categories: barData.date,\n          axisBorder: {\n            color: '#c90076' // Set the desired color for the x-axis line\n          },\n\n          labels: {\n            show: true,\n            style: {\n              colors: '#a20076' // Set the desired color for the x-axis labels\n            }\n          }\n\n          // title: {\n          //     text: 'Date',\n          //     style: {\n          //         color: '#a20076',\n          //         fontSize: '12px',\n          //         fontFamily: 'Helvetica, Arial, sans-serif',\n          //         fontWeight: 400,\n          //         cssClass: 'apexcharts-xaxis-title',\n          //     },\n          // },\n        },\n\n        // dataLabels: {\n        //     enabled: true,\n        // },\n        colors: ['#fff'],\n        // xaxis: {\n        //     categories: ['item 1', 'item 2', 'item 3', 'item 4', 'item 5'],\n        // },\n        tooltip: {\n          theme: 'dark',\n          fixed: {\n            enabled: false\n          }\n          // x: {\n          //     show: false,\n          // },\n          // y: {\n          //     title: {\n          //         formatter: (seriesName) => 'Incoming Stock Per Day',\n          //     },\n          // },\n          // marker: {\n          //     show: true,\n          // },\n        }\n      },\n\n      series: [\n      // {\n      //     name: 'series1',\n      //data: [55, 35, 75, 25, 90, 50],\n      // },\n      {\n        name: 'added to inventory',\n        data: [55, 35, 75, 25, 90, 55, 35, 75, 25, 90]\n\n        // data: barData.countdate\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    sm: 6,\n    xs: 12,\n    style: {\n      marginTop: \"75px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SalesLineCard, {\n    chartData: {\n      type: 'bar',\n      height: 50,\n      options: {\n        chart: {\n          sparkline: {\n            enabled: true\n          }\n        },\n        xaxis: {\n          // type: 'categories',\n          // categories: barData.date,\n          axisBorder: {\n            color: '#c90076' // Set the desired color for the x-axis line\n          },\n\n          labels: {\n            show: true,\n            style: {\n              colors: '#a20076' // Set the desired color for the x-axis labels\n            }\n          }\n\n          // title: {\n          //     text: 'Date',\n          //     style: {\n          //         color: '#a20076',\n          //         fontSize: '12px',\n          //         fontFamily: 'Helvetica, Arial, sans-serif',\n          //         fontWeight: 400,\n          //         cssClass: 'apexcharts-xaxis-title',\n          //     },\n          // },\n        },\n\n        // dataLabels: {\n        //     enabled: true,\n        // },\n        colors: ['#fff'],\n        // xaxis: {\n        //     categories: ['item 1', 'item 2', 'item 3', 'item 4', 'item 5'],\n        // },\n        tooltip: {\n          theme: 'dark',\n          fixed: {\n            enabled: false\n          }\n          // x: {\n          //     show: false,\n          // },\n          // y: {\n          //     title: {\n          //         formatter: (seriesName) => 'Incoming Stock Per Day',\n          //     },\n          // },\n          // marker: {\n          //     show: true,\n          // },\n        }\n      },\n\n      series: [\n      // {\n      //     name: 'series1',\n      //data: [55, 35, 75, 25, 90, 50],\n      // },\n      {\n        name: 'added to inventory',\n        data: [55, 35, 75, 25, 90, 55, 35, 75, 25, 90]\n\n        // data: barData.countdate\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    sm: 6,\n    xs: 12,\n    style: {\n      marginTop: \"75px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 646,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SalesLineCard, {\n    chartData: {\n      type: 'bar',\n      height: 50,\n      options: {\n        chart: {\n          sparkline: {\n            enabled: true\n          }\n        },\n        xaxis: {\n          // type: 'categories',\n          // categories: barData.date,\n          axisBorder: {\n            color: '#c90076' // Set the desired color for the x-axis line\n          },\n\n          labels: {\n            show: true,\n            style: {\n              colors: '#a20076' // Set the desired color for the x-axis labels\n            }\n          }\n\n          // title: {\n          //     text: 'Date',\n          //     style: {\n          //         color: '#a20076',\n          //         fontSize: '12px',\n          //         fontFamily: 'Helvetica, Arial, sans-serif',\n          //         fontWeight: 400,\n          //         cssClass: 'apexcharts-xaxis-title',\n          //     },\n          // },\n        },\n\n        // dataLabels: {\n        //     enabled: true,\n        // },\n        colors: ['#fff'],\n        // xaxis: {\n        //     categories: ['item 1', 'item 2', 'item 3', 'item 4', 'item 5'],\n        // },\n        tooltip: {\n          theme: 'dark',\n          fixed: {\n            enabled: false\n          }\n          // x: {\n          //     show: false,\n          // },\n          // y: {\n          //     title: {\n          //         formatter: (seriesName) => 'Incoming Stock Per Day',\n          //     },\n          // },\n          // marker: {\n          //     show: true,\n          // },\n        }\n      },\n\n      series: [\n      // {\n      //     name: 'series1',\n      //data: [55, 35, 75, 25, 90, 50],\n      // },\n      {\n        name: 'added to inventory',\n        data: [55, 35, 75, 25, 90, 55, 35, 75, 25, 90]\n\n        // data: barData.countdate\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 647,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    sm: 6,\n    xs: 12,\n    style: {\n      marginTop: \"75px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 726,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SalesLineCard, {\n    chartData: {\n      type: 'bar',\n      height: 50,\n      options: {\n        chart: {\n          sparkline: {\n            enabled: true\n          }\n        },\n        xaxis: {\n          // type: 'categories',\n          // categories: barData.date,\n          axisBorder: {\n            color: '#c90076' // Set the desired color for the x-axis line\n          },\n\n          labels: {\n            show: true,\n            style: {\n              colors: '#a20076' // Set the desired color for the x-axis labels\n            }\n          }\n\n          // title: {\n          //     text: 'Date',\n          //     style: {\n          //         color: '#a20076',\n          //         fontSize: '12px',\n          //         fontFamily: 'Helvetica, Arial, sans-serif',\n          //         fontWeight: 400,\n          //         cssClass: 'apexcharts-xaxis-title',\n          //     },\n          // },\n        },\n\n        // dataLabels: {\n        //     enabled: true,\n        // },\n        colors: ['#fff'],\n        // xaxis: {\n        //     categories: ['item 1', 'item 2', 'item 3', 'item 4', 'item 5'],\n        // },\n        tooltip: {\n          theme: 'dark',\n          fixed: {\n            enabled: false\n          }\n          // x: {\n          //     show: false,\n          // },\n          // y: {\n          //     title: {\n          //         formatter: (seriesName) => 'Incoming Stock Per Day',\n          //     },\n          // },\n          // marker: {\n          //     show: true,\n          // },\n        }\n      },\n\n      series: [\n      // {\n      //     name: 'series1',\n      //data: [55, 35, 75, 25, 90, 50],\n      // },\n      {\n        name: 'added to inventory',\n        data: [55, 35, 75, 25, 90, 55, 35, 75, 25, 90]\n\n        // data: barData.countdate\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 727,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    sm: 6,\n    xs: 12,\n    style: {\n      marginTop: \"75px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 806,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(SalesLineCard, {\n    chartData: {\n      type: 'bar',\n      height: 50,\n      options: {\n        chart: {\n          sparkline: {\n            enabled: true\n          }\n        },\n        xaxis: {\n          // type: 'categories',\n          // categories: barData.date,\n          axisBorder: {\n            color: '#c90076' // Set the desired color for the x-axis line\n          },\n\n          labels: {\n            show: true,\n            style: {\n              colors: '#a20076' // Set the desired color for the x-axis labels\n            }\n          }\n\n          // title: {\n          //     text: 'Date',\n          //     style: {\n          //         color: '#a20076',\n          //         fontSize: '12px',\n          //         fontFamily: 'Helvetica, Arial, sans-serif',\n          //         fontWeight: 400,\n          //         cssClass: 'apexcharts-xaxis-title',\n          //     },\n          // },\n        },\n\n        // dataLabels: {\n        //     enabled: true,\n        // },\n        colors: ['#fff'],\n        // xaxis: {\n        //     categories: ['item 1', 'item 2', 'item 3', 'item 4', 'item 5'],\n        // },\n        tooltip: {\n          theme: 'dark',\n          fixed: {\n            enabled: false\n          }\n          // x: {\n          //     show: false,\n          // },\n          // y: {\n          //     title: {\n          //         formatter: (seriesName) => 'Incoming Stock Per Day',\n          //     },\n          // },\n          // marker: {\n          //     show: true,\n          // },\n        }\n      },\n\n      series: [\n      // {\n      //     name: 'series1',\n      //data: [55, 35, 75, 25, 90, 50],\n      // },\n      {\n        name: 'added to inventory',\n        data: [55, 35, 75, 25, 90, 55, 35, 75, 25, 90]\n\n        // data: barData.countdate\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 807,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    sm: 6,\n    xs: 12,\n    style: {\n      marginTop: \"75px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 886,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(SalesLineCard, {\n    chartData: {\n      type: 'bar',\n      height: 50,\n      options: {\n        chart: {\n          sparkline: {\n            enabled: true\n          }\n        },\n        xaxis: {\n          // type: 'categories',\n          // categories: barData.date,\n          axisBorder: {\n            color: '#c90076' // Set the desired color for the x-axis line\n          },\n\n          labels: {\n            show: true,\n            style: {\n              colors: '#a20076' // Set the desired color for the x-axis labels\n            }\n          }\n\n          // title: {\n          //     text: 'Date',\n          //     style: {\n          //         color: '#a20076',\n          //         fontSize: '12px',\n          //         fontFamily: 'Helvetica, Arial, sans-serif',\n          //         fontWeight: 400,\n          //         cssClass: 'apexcharts-xaxis-title',\n          //     },\n          // },\n        },\n\n        // dataLabels: {\n        //     enabled: true,\n        // },\n        colors: ['#fff'],\n        // xaxis: {\n        //     categories: ['item 1', 'item 2', 'item 3', 'item 4', 'item 5'],\n        // },\n        tooltip: {\n          theme: 'dark',\n          fixed: {\n            enabled: false\n          }\n          // x: {\n          //     show: false,\n          // },\n          // y: {\n          //     title: {\n          //         formatter: (seriesName) => 'Incoming Stock Per Day',\n          //     },\n          // },\n          // marker: {\n          //     show: true,\n          // },\n        }\n      },\n\n      series: [\n      // {\n      //     name: 'series1',\n      //data: [55, 35, 75, 25, 90, 50],\n      // },\n      {\n        name: 'added to inventory',\n        data: [55, 35, 75, 25, 90, 55, 35, 75, 25, 90]\n\n        // data: barData.countdate\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 887,\n      columnNumber: 11\n    }\n  })))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 971,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(LatestorderCard, {\n    title: \"Latest Order\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 972,\n      columnNumber: 9\n    }\n  }))));\n};\nexport default Default;","map":{"version":3,"names":["React","moment","makeStyles","Grid","Card","CardHeader","CardContent","Hidden","Typography","Divider","LinearProgress","useTheme","useState","useEffect","axios","value","TrendingUpIcon","TrendingDownIcon","DvrIconTwoTone","DescriptionTwoTone","IndeterminateCheckBoxTwoToneIcon","CalendarTodayTwoTone","SalesLineCard","SalesLineCardData","RevenuChartCard","RevenuChartCardData","ReportCard","LatestorderCard","gridSpacing","useStyles","theme","arrowicon","width","height","verticalAlign","flatcardbody","padding","flatcardblock","borderLeft","palette","background","default","breakpoints","down","borderBottom","textsuccess","color","success","main","texterror","error","Default","classes","currentDateTime","setCurrentDateTime","Date","timer","setInterval","clearInterval","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","marginLeft","toString","container","spacing","paddingLeft","item","xs","lg","sm","marginTop","primary","secondary","iconPrimary","iconFooter","direction","title","t","className","chartData","type","options","chart","sparkline","enabled","xaxis","axisBorder","labels","show","colors","text","fontSize","fontFamily","fontWeight","cssClass","tooltip","fixed","y","formatter","seriesName","marker","series","name","data","dataLabels","legend","position","itemMargin","horizontal","vertical","info"],"sources":["D:/New folder (2)/frontend/src/views/Dashboard/Default/index.js"],"sourcesContent":["import React from \"react\";\nimport moment from 'moment';\nimport {\n  makeStyles,\n  Grid,\n  Card,\n  CardHeader,\n  CardContent,\n  Hidden,\n  Typography,\n  Divider,\n  LinearProgress,\n} from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport value from '../../../assets/scss/_themes-vars.scss';\n\nimport TrendingUpIcon from \"@material-ui/icons/TrendingUp\";\nimport TrendingDownIcon from \"@material-ui/icons/TrendingDown\";\n// import MonetizationOnTwoTone from '@material-ui/icons/MonetizationOnTwoTone';\nimport DvrIconTwoTone from \"@material-ui/icons/DvrTwoTone\";\nimport DescriptionTwoTone from \"@material-ui/icons/DescriptionTwoTone\";\n// import ThumbUpAltTwoTone from '@material-ui/icons/ThumbUpAltTwoTone';\nimport IndeterminateCheckBoxTwoToneIcon from \"@material-ui/icons/IndeterminateCheckBoxTwoTone\";\nimport CalendarTodayTwoTone from \"@material-ui/icons/CalendarTodayTwoTone\";\n\nimport SalesLineCard from \"./SalesLineCard\";\nimport SalesLineCardData from \"./chart/sale-chart-1\";\n\nimport RevenuChartCard from \"./RevenuChartCard\";\nimport RevenuChartCardData from \"./chart/revenu-chart\";\n\nimport ReportCard from \"./ReportCard\";\nimport LatestorderCard from \"./LatestorderCard\";\n\nimport { gridSpacing } from \"./../../../store/constant\";\n\nconst useStyles = makeStyles((theme) => ({\n  arrowicon: {\n    \"& svg\": {\n      width: \"20px\",\n      height: \"20px\",\n      verticalAlign: \"top\",\n    },\n  },\n  flatcardbody: {\n    padding: \"0px !important\",\n    \"& svg\": {\n      width: \"40px\",\n      height: \"40px\",\n    },\n  },\n  flatcardblock: {\n    padding: \"25px 25px\",\n    borderLeft: \"1px solid\" + theme.palette.background.default,\n    [theme.breakpoints.down(\"xs\")]: {\n      borderLeft: \"none\",\n      borderBottom: \"10px solid\" + theme.palette.background.default,\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      borderBottom: \"10px solid\" + theme.palette.background.default,\n    },\n  },\n  textsuccess: {\n    color: theme.palette.success.main,\n  },\n  texterror: {\n    color: theme.palette.error.main,\n  },\n}));\n\nconst Default = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [currentDateTime, setCurrentDateTime] = useState(new Date());\n\n \n//   const [totalItems, setTotalItems] = useState();\n//   const [instock, setInStock] = useState();\n//   const [count, setCount] = useState(0);\n//   const [count1, setCount1] = useState(0);\n//   const [counts, setCounts] = useState(0);\n//   const [count2, setCount2] = useState([]);\n//   const [count4, setCount4] = useState([]);\n//   const [barData, setbarData] = useState([]);\n \nuseEffect(() => {\n    const timer = setInterval(() => {\n      setCurrentDateTime(new Date());\n    }, 1000); // Update every second\n\n    return () => {\n      clearInterval(timer); // Clean up the timer on component unmount\n    };\n  }, []);\n \n//   useEffect(() => {\n//       fetch('http://localhost:5000/outofstock')\n//           .then((res) => res.json())\n//           .then((data) => {\n//               setCounts(data[0].total_out_of_stock);\n//           });\n//       fetch('http://localhost:5000/count')\n//           .then((res) => res.json())\n//           .then((data) => {\n//               setCount(data[0].count);\n//           });\n//       fetch('http://localhost:5000/data/count')\n//           .then((res) => res.json())\n//           .then((data) => {\n//               setCount1(data.count1);\n//           });\n//           fetch('http://localhost:5000/barData')\n//           .then((res) => res.json())\n//           .then((data) => {\n//               setbarData(data);\n//           });\n     \n//      fetch('http://localhost:5000/daily/count')\n//           .then(response => response.json())\n//           .then(dataArray => setCount2(dataArray))\n//           .catch(error => console.log(error));\n          \n\n//       //fetchTest();\n//   }, []);\n\n  \n\n  return (\n    <><br/><br/><br/>\n     <div style={{marginLeft:350}}>\n      <h4>{currentDateTime.toString()}</h4>\n    </div>\n    <Grid container spacing={gridSpacing} style={{ paddingLeft: \"2rem\" }}>\n        \n        {/* {console.log(count2)} */}\n      <Grid item xs={9}>\n        <Grid container spacing={gridSpacing}>\n          <Grid item lg={4} sm={6} xs={12} style={{ marginTop: \"30px\" }}>\n            <ReportCard\n              primary={200}\n            //   primary={count}\n              secondary=\"Yearly Accident Records\"\n              color={theme.palette.primary.main}\n              // footerData=\"10% changes on profit\"\n              iconPrimary={DvrIconTwoTone}\n              iconFooter={TrendingUpIcon}\n            />\n          </Grid>\n          {/* <Grid item lg={3} sm={6} xs={12}>\n                        <ReportCard\n                            primary={145}\n                            secondary=\"Number of categories\"\n                            color={theme.palette.primary.main}\n                            // footerData=\"28% task performance\"\n                            iconPrimary={CalendarTodayTwoTone}\n                            iconFooter={TrendingDownIcon}\n                        />\n                    </Grid> */}\n          <Grid item lg={4} sm={6} xs={12} style={{ marginTop: \"30px\" }}>\n            <ReportCard\n             primary={50}\n            //   primary={count1}\n              secondary=\"Monthly Accident Records\"\n              color={theme.palette.success.main}\n              // footerData=\"10k daily views\"\n              iconPrimary={DescriptionTwoTone}\n              iconFooter={TrendingUpIcon}\n            />\n          </Grid>\n          <Grid item lg={4} sm={6} xs={12} style={{ marginTop: \"30px\" }}>\n            <ReportCard\n             primary={10}\n            //   primary={counts}\n              secondary=\"Today's Accident Records\"\n              color={theme.palette.primary.main}\n              // footerData=\"1k download in App store\"\n              iconPrimary={IndeterminateCheckBoxTwoToneIcon}\n              iconFooter={TrendingUpIcon}\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item xs={9}>\n        <Grid container spacing={gridSpacing}>\n          <Grid item lg={14} xs={12}>\n            <Grid container spacing={gridSpacing}>\n              <Grid item xs={12} sm={6}>\n                <Grid container spacing={gridSpacing} direction=\"column\">\n                  <Grid item xs={12}>\n                    {/* bar chart to go here */}\n                    <CardHeader style={{background:\"white\"}}\n                     title={\n                    <Typography t=\"div\" className=\"card-header\">\n                        Total Revenue\n                    </Typography>\n                }\n            />\n                    <SalesLineCard\n                    \n                     chartData = {{\n                        type: 'line',\n                        height: 115,\n                        options: {\n                            chart: {\n                                sparkline: {\n                                    enabled: true,\n                                },\n                            },\n                            xaxis: {\n                                // type: 'categories',\n                                // categories: barData.date,\n                                axisBorder: {\n                                    color: '#c90076' // Set the desired color for the x-axis line\n                                },\n\n                                labels: {\n                                    show: true,\n                                    style: {\n                                        colors: '#a20076' // Set the desired color for the x-axis labels\n                                    }\n                                },\n\n                                title: {\n                                    text: 'Date',\n                                    style: {\n                                        color: '#a20076',\n                                        fontSize: '12px',\n                                        fontFamily: 'Helvetica, Arial, sans-serif',\n                                        fontWeight: 400,\n                                        cssClass: 'apexcharts-xaxis-title',\n                                    },\n                                },\n                            },\n                            // dataLabels: {\n                            //     enabled: true,\n                            // },\n                            colors: ['#fff'],\n                    \n                            // xaxis: {\n                            //     categories: ['item 1', 'item 2', 'item 3', 'item 4', 'item 5'],\n                            // },\n                            tooltip: {\n                                theme: 'dark',\n                                fixed: {\n                                    enabled: false,\n                                },\n                                // x: {\n                                //     show: false,\n                                // },\n                                y: {\n                                    title: {\n                                        formatter: (seriesName) => 'Accidents Occur per Months',\n                                    },\n                                },\n                                marker: {\n                                    show: true,\n                                },\n                            },\n                        },\n                        series: [\n                            // {\n                            //     name: 'series1',\n                                //data: [55, 35, 75, 25, 90, 50],\n                            // },\n                            {\n                                name: 'added to inventory',\n                                data: [55, 35, 75, 25, 90, 50,55, 35, 75, 25, 90, 50]\n                                \n                                // data: barData.countdate\n                            \n                            \n                            },\n                        ],\n                     \n                    }}\n                    />\n                    \n            </Grid>\n\n                       \n                      {/* chartData={SalesLineCardData}\n                       title=\"Sales Per Day\"\n                       percentage=\"3%\"\n                       icon={<TrendingDownIcon />}\n                       footerData={[ \n                         {\n                    //       value: \"2272 +\",\n                    //       label: \"Max \",\n                    //     },\n                    //     {\n                    //       value: \"1516 +\",\n                    //       label: \"Least \",\n                    //     },\n                    //   ]}\n                \n                \n                  {/* <Hidden only=\"sm\">\n                                        <Grid item xs={12}>\n                                            <Card>\n                                                <CardContent className={classes.flatcardbody}>\n                                                    <Grid container alignItems=\"center\" spacing={0}>\n                                                        <Grid item sm={6} xs={12} className={classes.flatcardblock}>\n                                                            <Grid container alignItems=\"center\" spacing={1}>\n                                                                <Grid item>\n                                                                    <Typography variant=\"subtitle2\" align=\"left\">\n                                                                        REALTY\n                                                                    </Typography>\n                                                                </Grid>\n                                                                <Grid item sm zeroMinWidth>\n                                                                    <Typography variant=\"h5\" align=\"right\">\n                                                                        -0.99\n                                                                    </Typography>\n                                                                </Grid>\n                                                            </Grid>\n                                                        </Grid>\n                                                        <Grid item sm={6} xs={12} className={classes.flatcardblock}>\n                                                            <Grid container alignItems=\"center\" spacing={1}>\n                                                                <Grid item>\n                                                                    <Typography variant=\"subtitle2\" align=\"left\">\n                                                                        INFRA\n                                                                    </Typography>\n                                                                </Grid>\n                                                                <Grid item sm zeroMinWidth>\n                                                                    <Typography variant=\"h5\" className={classes.textsuccess} align=\"right\">\n                                                                        -7.66\n                                                                    </Typography>\n                                                                </Grid>\n                                                            </Grid>\n                                                        </Grid>\n                                                    </Grid>\n                                                </CardContent>\n                                            </Card>\n                                        </Grid>\n                                    </Hidden> */}\n                </Grid>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n              <RevenuChartCard\n                                        chartData={{\n                                            height: 228,\n                                            type: 'pie',\n                                            options: {\n                                                dataLabels: {\n                                                    enabled: false,\n                                                },\n                                                labels: ['Yearly', 'Monthly', 'Todays'],\n                                                legend: {\n                                                    show: true,\n                                                    position: 'bottom',\n                                                    fontFamily: 'inherit',\n                                                    labels: {\n                                                        colors: 'inherit',\n                                                    },\n                                                },\n                                                itemMargin: {\n                                                    horizontal: 10,\n                                                    vertical: 10,\n                                                },\n                                                colors: [value.error, value.primary, value.info],\n                                            },\n                                            // series: [count, count1, counts],\n                                            series: [200,50,10],\n                                        }}\n                                    />\n              </Grid>\n            </Grid>\n          </Grid>\n          {/* Progress report tables here */}\n          {/* <Grid item lg={4} xs={12}>\n                        <Card>\n                            <CardHeader\n                                title={\n                                    <Typography component=\"div\" className=\"card-header\">\n                                        Traffic Sources\n                                    </Typography>\n                                }\n                            />\n                            <Divider />\n                            <CardContent>\n                                <Grid container spacing={gridSpacing}>\n                                    <Grid item xs={12}>\n                                        <Grid container alignItems=\"center\" spacing={1}>\n                                            <Grid item sm zeroMinWidth>\n                                                <Typography variant=\"body2\">Direct</Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Typography variant=\"body2\" align=\"right\">\n                                                    80%\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item xs={12}>\n                                                <LinearProgress variant=\"determinate\" value={80} color=\"primary\" />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid container alignItems=\"center\" spacing={1}>\n                                            <Grid item sm zeroMinWidth>\n                                                <Typography variant=\"body2\">Social</Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Typography variant=\"body2\" align=\"right\">\n                                                    50%\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item xs={12}>\n                                                <LinearProgress variant=\"determinate\" value={50} color=\"secondary\" />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid container alignItems=\"center\" spacing={1}>\n                                            <Grid item sm zeroMinWidth>\n                                                <Typography variant=\"body2\">Referral</Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Typography variant=\"body2\" align=\"right\">\n                                                    20%\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item xs={12}>\n                                                <LinearProgress variant=\"determinate\" value={20} color=\"primary\" />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid container alignItems=\"center\" spacing={1}>\n                                            <Grid item sm zeroMinWidth>\n                                                <Typography variant=\"body2\">Bounce</Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Typography variant=\"body2\" align=\"right\">\n                                                    60%\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item xs={12}>\n                                                <LinearProgress variant=\"determinate\" value={60} color=\"secondary\" />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid container alignItems=\"center\" spacing={1}>\n                                            <Grid item sm zeroMinWidth>\n                                                <Typography variant=\"body2\">Internet</Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Typography variant=\"body2\" align=\"right\">\n                                                    40%\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item xs={12}>\n                                                <LinearProgress variant=\"determinate\" value={40} color=\"primary\" />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </CardContent>\n                        </Card>\n                    </Grid> */}\n        </Grid>\n        <Grid container spacing={gridSpacing} style={{ paddingLeft: \"2rem\" }}>\n        {/* {console.log(count2)} */}\n      <Grid item xs={12}>\n        <Grid container spacing={gridSpacing}>\n          <Grid item lg={4} sm={6} xs={12} style={{ marginTop: \"75px\" }}>\n            {/* <ReportCard\n              primary={50}\n            //   primary={count}\n              secondary=\"Total Items\"\n              color={theme.palette.primary.main}\n              // footerData=\"10% changes on profit\"\n              iconPrimary={DvrIconTwoTone}\n              iconFooter={TrendingUpIcon} */}\n              <SalesLineCard\n                     chartData = {{\n                        type: 'bar',\n                        height: 50,\n                        options: {\n                            chart: {\n                                sparkline: {\n                                    enabled: true,\n                                },\n                            },\n                            xaxis: {\n                                 type: 'categories',\n                                //  categories: barData.date,\n                                axisBorder: {\n                                    color: '#c90076' // Set the desired color for the x-axis line\n                                },\n\n                                labels: {\n                                    show: true,\n                                    style: {\n                                        colors: '#a20076' // Set the desired color for the x-axis labels\n                                    }\n                                },\n\n                                // title: {\n                                //     text: 'Date',\n                                //     style: {\n                                //         color: '#a20076',\n                                //         fontSize: '12px',\n                                //         fontFamily: 'Helvetica, Arial, sans-serif',\n                                //         fontWeight: 400,\n                                //         cssClass: 'apexcharts-xaxis-title',\n                                //     },\n                                // },\n                            },\n                            // dataLabels: {\n                            //     enabled: true,\n                            // },\n                            colors: ['#fff'],\n                    \n                            // xaxis: {\n                            //     categories: ['item 1', 'item 2', 'item 3', 'item 4', 'item 5'],\n                            // },\n                            tooltip: {\n                                theme: 'dark',\n                                fixed: {\n                                    enabled: false,\n                                },\n                                // x: {\n                                //     show: false,\n                                // },\n                                // y: {\n                                //     title: {\n                                //         formatter: (seriesName) => 'Incoming Stock Per Day',\n                                //     },\n                                // },\n                                // marker: {\n                                //     show: true,\n                                // },\n                            },\n                        },\n                        series: [\n                            // {\n                            //     name: 'series1',\n                                //data: [55, 35, 75, 25, 90, 50],\n                            // },\n                            {\n                                name: 'added to inventory',\n                                data: [55, 35, 75, 25, 90,55, 35, 75, 25, 90,]\n                                \n                                // data: barData.countdate\n                            \n                            \n                            },\n                        ],\n                     \n                    }}\n                    />\n                    </Grid>\n          {/* <Grid item lg={3} sm={6} xs={12}>\n                        <ReportCard\n                            primary={145}\n                            secondary=\"Number of categories\"\n                            color={theme.palette.primary.main}\n                            // footerData=\"28% task performance\"\n                            iconPrimary={CalendarTodayTwoTone}\n                            iconFooter={TrendingDownIcon}\n                        />\n                    </Grid> */}\n          <Grid item lg={4} sm={6} xs={12} style={{ marginTop: \"75px\" }}>\n          <SalesLineCard\n                     chartData = {{\n                        type: 'bar',\n                        height: 50,\n                        options: {\n                            chart: {\n                                sparkline: {\n                                    enabled: true,\n                                },\n                            },\n                            xaxis: {\n                                // type: 'categories',\n                                // categories: barData.date,\n                                axisBorder: {\n                                    color: '#c90076' // Set the desired color for the x-axis line\n                                },\n\n                                labels: {\n                                    show: true,\n                                    style: {\n                                        colors: '#a20076' // Set the desired color for the x-axis labels\n                                    }\n                                },\n\n                                // title: {\n                                //     text: 'Date',\n                                //     style: {\n                                //         color: '#a20076',\n                                //         fontSize: '12px',\n                                //         fontFamily: 'Helvetica, Arial, sans-serif',\n                                //         fontWeight: 400,\n                                //         cssClass: 'apexcharts-xaxis-title',\n                                //     },\n                                // },\n                            },\n                            // dataLabels: {\n                            //     enabled: true,\n                            // },\n                            colors: ['#fff'],\n                    \n                            // xaxis: {\n                            //     categories: ['item 1', 'item 2', 'item 3', 'item 4', 'item 5'],\n                            // },\n                            tooltip: {\n                                theme: 'dark',\n                                fixed: {\n                                    enabled: false,\n                                },\n                                // x: {\n                                //     show: false,\n                                // },\n                                // y: {\n                                //     title: {\n                                //         formatter: (seriesName) => 'Incoming Stock Per Day',\n                                //     },\n                                // },\n                                // marker: {\n                                //     show: true,\n                                // },\n                            },\n                        },\n                        series: [\n                            // {\n                            //     name: 'series1',\n                                //data: [55, 35, 75, 25, 90, 50],\n                            // },\n                            {\n                                name: 'added to inventory',\n                                data: [55, 35, 75, 25, 90,55, 35, 75, 25, 90,]\n                                \n                                // data: barData.countdate\n                            \n                            \n                            },\n                        ],\n                     \n                    }}\n                    />\n          </Grid>\n          <Grid item lg={4} sm={6} xs={12} style={{ marginTop: \"75px\" }}>\n          <SalesLineCard\n                     chartData = {{\n                        type: 'bar',\n                        height: 50,\n                        options: {\n                            chart: {\n                                sparkline: {\n                                    enabled: true,\n                                },\n                            },\n                            xaxis: {\n                                // type: 'categories',\n                                // categories: barData.date,\n                                axisBorder: {\n                                    color: '#c90076' // Set the desired color for the x-axis line\n                                },\n\n                                labels: {\n                                    show: true,\n                                    style: {\n                                        colors: '#a20076' // Set the desired color for the x-axis labels\n                                    }\n                                },\n\n                                // title: {\n                                //     text: 'Date',\n                                //     style: {\n                                //         color: '#a20076',\n                                //         fontSize: '12px',\n                                //         fontFamily: 'Helvetica, Arial, sans-serif',\n                                //         fontWeight: 400,\n                                //         cssClass: 'apexcharts-xaxis-title',\n                                //     },\n                                // },\n                            },\n                            // dataLabels: {\n                            //     enabled: true,\n                            // },\n                            colors: ['#fff'],\n                    \n                            // xaxis: {\n                            //     categories: ['item 1', 'item 2', 'item 3', 'item 4', 'item 5'],\n                            // },\n                            tooltip: {\n                                theme: 'dark',\n                                fixed: {\n                                    enabled: false,\n                                },\n                                // x: {\n                                //     show: false,\n                                // },\n                                // y: {\n                                //     title: {\n                                //         formatter: (seriesName) => 'Incoming Stock Per Day',\n                                //     },\n                                // },\n                                // marker: {\n                                //     show: true,\n                                // },\n                            },\n                        },\n                        series: [\n                            // {\n                            //     name: 'series1',\n                                //data: [55, 35, 75, 25, 90, 50],\n                            // },\n                            {\n                                name: 'added to inventory',\n                                data: [55, 35, 75, 25, 90,55, 35, 75, 25, 90,]\n                                \n                                // data: barData.countdate\n                            \n                            \n                            },\n                        ],\n                     \n                    }}\n                    />\n          </Grid>\n          <Grid item lg={4} sm={6} xs={12} style={{ marginTop: \"75px\" }}>\n          <SalesLineCard\n                     chartData = {{\n                        type: 'bar',\n                        height: 50,\n                        options: {\n                            chart: {\n                                sparkline: {\n                                    enabled: true,\n                                },\n                            },\n                            xaxis: {\n                                // type: 'categories',\n                                // categories: barData.date,\n                                axisBorder: {\n                                    color: '#c90076' // Set the desired color for the x-axis line\n                                },\n\n                                labels: {\n                                    show: true,\n                                    style: {\n                                        colors: '#a20076' // Set the desired color for the x-axis labels\n                                    }\n                                },\n\n                                // title: {\n                                //     text: 'Date',\n                                //     style: {\n                                //         color: '#a20076',\n                                //         fontSize: '12px',\n                                //         fontFamily: 'Helvetica, Arial, sans-serif',\n                                //         fontWeight: 400,\n                                //         cssClass: 'apexcharts-xaxis-title',\n                                //     },\n                                // },\n                            },\n                            // dataLabels: {\n                            //     enabled: true,\n                            // },\n                            colors: ['#fff'],\n                    \n                            // xaxis: {\n                            //     categories: ['item 1', 'item 2', 'item 3', 'item 4', 'item 5'],\n                            // },\n                            tooltip: {\n                                theme: 'dark',\n                                fixed: {\n                                    enabled: false,\n                                },\n                                // x: {\n                                //     show: false,\n                                // },\n                                // y: {\n                                //     title: {\n                                //         formatter: (seriesName) => 'Incoming Stock Per Day',\n                                //     },\n                                // },\n                                // marker: {\n                                //     show: true,\n                                // },\n                            },\n                        },\n                        series: [\n                            // {\n                            //     name: 'series1',\n                                //data: [55, 35, 75, 25, 90, 50],\n                            // },\n                            {\n                                name: 'added to inventory',\n                                data: [55, 35, 75, 25, 90,55, 35, 75, 25, 90,]\n                                \n                                // data: barData.countdate\n                            \n                            \n                            },\n                        ],\n                     \n                    }}\n                    />\n                    </Grid>\n                    <Grid item lg={4} sm={6} xs={12} style={{ marginTop: \"75px\" }}>\n          <SalesLineCard\n                     chartData = {{\n                        type: 'bar',\n                        height: 50,\n                        options: {\n                            chart: {\n                                sparkline: {\n                                    enabled: true,\n                                },\n                            },\n                            xaxis: {\n                                // type: 'categories',\n                                // categories: barData.date,\n                                axisBorder: {\n                                    color: '#c90076' // Set the desired color for the x-axis line\n                                },\n\n                                labels: {\n                                    show: true,\n                                    style: {\n                                        colors: '#a20076' // Set the desired color for the x-axis labels\n                                    }\n                                },\n\n                                // title: {\n                                //     text: 'Date',\n                                //     style: {\n                                //         color: '#a20076',\n                                //         fontSize: '12px',\n                                //         fontFamily: 'Helvetica, Arial, sans-serif',\n                                //         fontWeight: 400,\n                                //         cssClass: 'apexcharts-xaxis-title',\n                                //     },\n                                // },\n                            },\n                            // dataLabels: {\n                            //     enabled: true,\n                            // },\n                            colors: ['#fff'],\n                    \n                            // xaxis: {\n                            //     categories: ['item 1', 'item 2', 'item 3', 'item 4', 'item 5'],\n                            // },\n                            tooltip: {\n                                theme: 'dark',\n                                fixed: {\n                                    enabled: false,\n                                },\n                                // x: {\n                                //     show: false,\n                                // },\n                                // y: {\n                                //     title: {\n                                //         formatter: (seriesName) => 'Incoming Stock Per Day',\n                                //     },\n                                // },\n                                // marker: {\n                                //     show: true,\n                                // },\n                            },\n                        },\n                        series: [\n                            // {\n                            //     name: 'series1',\n                                //data: [55, 35, 75, 25, 90, 50],\n                            // },\n                            {\n                                name: 'added to inventory',\n                                data: [55, 35, 75, 25, 90,55, 35, 75, 25, 90,]\n                                \n                                // data: barData.countdate\n                            \n                            \n                            },\n                        ],\n                     \n                    }}\n                    />\n                    </Grid>\n                    <Grid item lg={4} sm={6} xs={12} style={{ marginTop: \"75px\" }}>\n          <SalesLineCard\n                     chartData = {{\n                        type: 'bar',\n                        height: 50,\n                        options: {\n                            chart: {\n                                sparkline: {\n                                    enabled: true,\n                                },\n                            },\n                            xaxis: {\n                                // type: 'categories',\n                                // categories: barData.date,\n                                axisBorder: {\n                                    color: '#c90076' // Set the desired color for the x-axis line\n                                },\n\n                                labels: {\n                                    show: true,\n                                    style: {\n                                        colors: '#a20076' // Set the desired color for the x-axis labels\n                                    }\n                                },\n\n                                // title: {\n                                //     text: 'Date',\n                                //     style: {\n                                //         color: '#a20076',\n                                //         fontSize: '12px',\n                                //         fontFamily: 'Helvetica, Arial, sans-serif',\n                                //         fontWeight: 400,\n                                //         cssClass: 'apexcharts-xaxis-title',\n                                //     },\n                                // },\n                            },\n                            // dataLabels: {\n                            //     enabled: true,\n                            // },\n                            colors: ['#fff'],\n                    \n                            // xaxis: {\n                            //     categories: ['item 1', 'item 2', 'item 3', 'item 4', 'item 5'],\n                            // },\n                            tooltip: {\n                                theme: 'dark',\n                                fixed: {\n                                    enabled: false,\n                                },\n                                // x: {\n                                //     show: false,\n                                // },\n                                // y: {\n                                //     title: {\n                                //         formatter: (seriesName) => 'Incoming Stock Per Day',\n                                //     },\n                                // },\n                                // marker: {\n                                //     show: true,\n                                // },\n                            },\n                        },\n                        series: [\n                            // {\n                            //     name: 'series1',\n                                //data: [55, 35, 75, 25, 90, 50],\n                            // },\n                            {\n                                name: 'added to inventory',\n                                data: [55, 35, 75, 25, 90,55, 35, 75, 25, 90,]\n                                \n                                // data: barData.countdate\n                            \n                            \n                            },\n                        ],\n                     \n                    }}\n                    />\n                    </Grid>\n        </Grid>\n      </Grid>\n      </Grid>\n      </Grid>\n      \n      <Grid item xs={10}>\n        <LatestorderCard title=\"Latest Order\" />\n      </Grid>\n    </Grid>\n    </>\n  );\n};\n\nexport default Default;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}