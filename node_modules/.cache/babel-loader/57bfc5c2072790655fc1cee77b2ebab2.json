{"ast":null,"code":"import React from'react';import{makeStyles}from'@material-ui/core/styles';import{createTheme}from'@material-ui/core/styles';import{Card,CardHeader,Divider,Grid,Typography}from'@material-ui/core';import{Link}from'react-router-dom';import Breadcrumb from'./../../../component/Breadcrumb';import{gridSpacing}from'../../../store/constant';import Table from'@material-ui/core/Table';import TableBody from'@material-ui/core/TableBody';import TableCell from'@material-ui/core/TableCell';import TableContainer from'@material-ui/core/TableContainer';import TableHead from'@material-ui/core/TableHead';import TableRow from'@material-ui/core/TableRow';var useStyles=makeStyles({table:{minWidth:350}});function createData(name,calories,fat,carbs,protein){return{name:name,calories:calories,fat:fat,carbs:carbs,protein:protein};}var rows=[createData('Frozen yoghurt',159,6.0,24,4.0),createData('Ice cream sandwich',237,9.0,37,4.3),createData('Eclair',262,16.0,24,6.0),createData('Cupcake',305,3.7,67,4.3),createData('Gingerbread',356,16.0,49,3.9)];export default function TableBasic(){var classes=useStyles();return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Breadcrumb,{title:\"Basic\"},/*#__PURE__*/React.createElement(Typography,{component:Link,to:\"/\",variant:\"subtitle2\",color:\"inherit\",className:\"link-breadcrumb\"},\"Home\"),/*#__PURE__*/React.createElement(Typography,{variant:\"subtitle2\",color:\"inherit\",className:\"link-breadcrumb\"},\"Tables\"),/*#__PURE__*/React.createElement(Typography,{variant:\"subtitle2\",color:\"primary\",className:\"link-breadcrumb\"},\"Basic\")),/*#__PURE__*/React.createElement(Grid,{container:true,spacing:gridSpacing},/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardHeader,{title:/*#__PURE__*/React.createElement(Typography,{component:\"div\",className:\"card-header\"},\"Basic Table\")}),/*#__PURE__*/React.createElement(Divider,null),/*#__PURE__*/React.createElement(TableContainer,null,/*#__PURE__*/React.createElement(Table,{className:classes.table,\"aria-label\":\"simple table\"},/*#__PURE__*/React.createElement(TableHead,null,/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,null,\"Dessert (100g serving)\"),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},\"Calories\"),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},\"Fat\\xA0(g)\"),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},\"Carbs\\xA0(g)\"),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},\"Protein\\xA0(g)\"),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},\"Protein\\xA0(g)\"),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},\"Protein\\xA0(g)\"),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},\"Protein\\xA0(g)\"))),/*#__PURE__*/React.createElement(TableBody,null,rows.map(function(row){return/*#__PURE__*/React.createElement(TableRow,{key:row.name},/*#__PURE__*/React.createElement(TableCell,{component:\"th\",scope:\"row\"},row.name),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},row.calories),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},row.fat),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},row.carbs),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},row.protein),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},row.protein),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},row.protein),/*#__PURE__*/React.createElement(TableCell,{align:\"right\"},row.protein));}))))))));}","map":{"version":3,"names":["React","makeStyles","createTheme","Card","CardHeader","Divider","Grid","Typography","Link","Breadcrumb","gridSpacing","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","useStyles","table","minWidth","createData","name","calories","fat","carbs","protein","rows","TableBasic","classes","createElement","Fragment","title","component","to","variant","color","className","container","spacing","item","xs","align","map","row","key","scope"],"sources":["D:/New folder (2)/frontend/src/views/Tables/TableBasic/index.js"],"sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { createTheme } from '@material-ui/core/styles';\nimport { Card, CardHeader, Divider, Grid, Typography } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\nimport Breadcrumb from './../../../component/Breadcrumb';\nimport { gridSpacing } from '../../../store/constant';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 350,\n    },\n});\n\nfunction createData(name, calories, fat, carbs, protein) {\n    return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n    createData('Eclair', 262, 16.0, 24, 6.0),\n    createData('Cupcake', 305, 3.7, 67, 4.3),\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\n];\n\nexport default function TableBasic() {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            <Breadcrumb title=\"Basic\">\n                <Typography component={Link} to=\"/\" variant=\"subtitle2\" color=\"inherit\" className=\"link-breadcrumb\">\n                    Home\n                </Typography>\n                <Typography variant=\"subtitle2\" color=\"inherit\" className=\"link-breadcrumb\">\n                    Tables\n                </Typography>\n                <Typography variant=\"subtitle2\" color=\"primary\" className=\"link-breadcrumb\">\n                    Basic\n                </Typography>\n            </Breadcrumb>\n            <Grid container spacing={gridSpacing}>\n                <Grid item xs={12}>\n                    <Card>\n                        <CardHeader\n                            title={\n                                <Typography component=\"div\" className=\"card-header\">\n                                    Basic Table\n                                </Typography>\n                            }\n                        />\n                        <Divider />\n                        <TableContainer>\n                            <Table className={classes.table} aria-label=\"simple table\">\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell>Dessert (100g serving)</TableCell>\n                                        <TableCell align=\"right\">Calories</TableCell>\n                                        <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\n                                        <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\n                                        <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\n                                        <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\n                                        <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\n                                        <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {rows.map((row) => (\n                                        <TableRow key={row.name}>\n                                            <TableCell component=\"th\" scope=\"row\">\n                                                {row.name}\n                                            </TableCell>\n                                            <TableCell align=\"right\">{row.calories}</TableCell>\n                                            <TableCell align=\"right\">{row.fat}</TableCell>\n                                            <TableCell align=\"right\">{row.carbs}</TableCell>\n                                            <TableCell align=\"right\">{row.protein}</TableCell>\n                                            <TableCell align=\"right\">{row.protein}</TableCell>\n                                            <TableCell align=\"right\">{row.protein}</TableCell>\n                                            <TableCell align=\"right\">{row.protein}</TableCell>\n                                        </TableRow>\n                                    ))}\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                    </Card>\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}