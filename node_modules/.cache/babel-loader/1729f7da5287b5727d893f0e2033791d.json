{"ast":null,"code":"var _jsxFileName = \"C:\\\\logs\\\\webcam project\\\\frontend\\\\src\\\\views\\\\Dashboard\\\\Default\\\\index.js\";\nimport React from \"react\";\nimport { makeStyles, Grid, Card, CardHeader, CardContent, Hidden, Typography, Divider, LinearProgress } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport value from '../../../assets/scss/_themes-vars.scss';\nimport TrendingUpIcon from \"@material-ui/icons/TrendingUp\";\nimport TrendingDownIcon from \"@material-ui/icons/TrendingDown\";\n// import MonetizationOnTwoTone from '@material-ui/icons/MonetizationOnTwoTone';\nimport DvrIconTwoTone from \"@material-ui/icons/DvrTwoTone\";\nimport DescriptionTwoTone from \"@material-ui/icons/DescriptionTwoTone\";\n// import ThumbUpAltTwoTone from '@material-ui/icons/ThumbUpAltTwoTone';\nimport IndeterminateCheckBoxTwoToneIcon from \"@material-ui/icons/IndeterminateCheckBoxTwoTone\";\nimport CalendarTodayTwoTone from \"@material-ui/icons/CalendarTodayTwoTone\";\nimport SalesLineCard from \"./SalesLineCard\";\nimport SalesLineCardData from \"./chart/sale-chart-1\";\nimport RevenuChartCard from \"./RevenuChartCard\";\nimport RevenuChartCardData from \"./chart/revenu-chart\";\nimport ReportCard from \"./ReportCard\";\nimport LatestorderCard from \"./LatestorderCard\";\nimport { gridSpacing } from \"./../../../store/constant\";\nconst useStyles = makeStyles(theme => ({\n  arrowicon: {\n    \"& svg\": {\n      width: \"20px\",\n      height: \"20px\",\n      verticalAlign: \"top\"\n    }\n  },\n  flatcardbody: {\n    padding: \"0px !important\",\n    \"& svg\": {\n      width: \"40px\",\n      height: \"40px\"\n    }\n  },\n  flatcardblock: {\n    padding: \"25px 25px\",\n    borderLeft: \"1px solid\" + theme.palette.background.default,\n    [theme.breakpoints.down(\"xs\")]: {\n      borderLeft: \"none\",\n      borderBottom: \"10px solid\" + theme.palette.background.default\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      borderBottom: \"10px solid\" + theme.palette.background.default\n    }\n  },\n  textsuccess: {\n    color: theme.palette.success.main\n  },\n  texterror: {\n    color: theme.palette.error.main\n  }\n}));\nconst Default = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [totalItems, setTotalItems] = useState();\n  const [instock, setInStock] = useState();\n  const [count, setCount] = useState(0);\n  const [count1, setCount1] = useState(0);\n  const [counts, setCounts] = useState(0);\n  useEffect(() => {\n    fetch('http://localhost:5000/outofstock').then(res => res.json()).then(data => {\n      setCounts(data[0].total_out_of_stock);\n    });\n    fetch('http://localhost:5000/count').then(res => res.json()).then(data => {\n      setCount(data[0].count);\n    });\n    fetch('http://localhost:5000/data/count').then(res => res.json()).then(data => {\n      setCount1(data.count1);\n    });\n    //fetchTest();\n  }, []);\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: gridSpacing,\n    style: {\n      paddingLeft: \"2rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: gridSpacing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    sm: 6,\n    xs: 12,\n    style: {\n      marginTop: \"75px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ReportCard\n  // primary={totalItems}\n  , {\n    primary: count,\n    secondary: \"Total Items\",\n    color: theme.palette.primary.main\n    // footerData=\"10% changes on profit\"\n    ,\n    iconPrimary: DvrIconTwoTone,\n    iconFooter: TrendingUpIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    sm: 6,\n    xs: 12,\n    style: {\n      marginTop: \"75px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ReportCard, {\n    primary: count1,\n    secondary: \"Incoming Stock\",\n    color: theme.palette.success.main\n    // footerData=\"10k daily views\"\n    ,\n    iconPrimary: DescriptionTwoTone,\n    iconFooter: TrendingUpIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    sm: 6,\n    xs: 12,\n    style: {\n      marginTop: \"75px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ReportCard, {\n    primary: counts,\n    secondary: \"Out of Stock\",\n    color: theme.palette.primary.main\n    // footerData=\"1k download in App store\"\n    ,\n    iconPrimary: IndeterminateCheckBoxTwoToneIcon,\n    iconFooter: TrendingUpIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: gridSpacing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 14,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: gridSpacing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: gridSpacing,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(SalesLineCard, {\n    chartData: {\n      type: 'bar',\n      height: 115,\n      options: {\n        chart: {\n          sparkline: {\n            enabled: true\n          }\n        },\n        // dataLabels: {\n        //     enabled: true,\n        // },\n        colors: ['#fff'],\n        // xaxis: {\n        //     categories: ['item 1', 'item 2', 'item 3', 'item 4', 'item 5'],\n        // },\n        tooltip: {\n          theme: 'dark',\n          fixed: {\n            enabled: false\n          },\n          // x: {\n          //     show: false,\n          // },\n          y: {\n            title: {\n              formatter: seriesName => 'Sales/Order Per Day'\n            }\n          },\n          marker: {\n            show: false\n          }\n        }\n      },\n      series: [\n      // {\n      //     name: 'series1',\n      //     data: [55, 35, 75, 25, 90, 50],\n      // },\n      {\n        name: 'added to inventory',\n        data: [count, count1, counts, 1972, 1516, 2722, 2080, 2063, 1972, 1516, 2722, 2080, 2063, 1972, 1516, 2722, 2080, 2063, 1972, 2080]\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(RevenuChartCard, {\n    chartData: {\n      height: 228,\n      type: 'pie',\n      options: {\n        dataLabels: {\n          enabled: false\n        },\n        labels: ['Total Items', 'Incoming', 'Outgoing'],\n        legend: {\n          show: true,\n          position: 'bottom',\n          fontFamily: 'inherit',\n          labels: {\n            colors: 'inherit'\n          }\n        },\n        itemMargin: {\n          horizontal: 10,\n          vertical: 10\n        },\n        colors: [value.error, value.primary, value.info]\n      },\n      series: [count, count1, counts]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 15\n    }\n  })))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(LatestorderCard, {\n    title: \"Latest Order\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 9\n    }\n  })));\n};\nexport default Default;","map":{"version":3,"names":["React","makeStyles","Grid","Card","CardHeader","CardContent","Hidden","Typography","Divider","LinearProgress","useTheme","useState","useEffect","axios","value","TrendingUpIcon","TrendingDownIcon","DvrIconTwoTone","DescriptionTwoTone","IndeterminateCheckBoxTwoToneIcon","CalendarTodayTwoTone","SalesLineCard","SalesLineCardData","RevenuChartCard","RevenuChartCardData","ReportCard","LatestorderCard","gridSpacing","useStyles","theme","arrowicon","width","height","verticalAlign","flatcardbody","padding","flatcardblock","borderLeft","palette","background","default","breakpoints","down","borderBottom","textsuccess","color","success","main","texterror","error","Default","classes","totalItems","setTotalItems","instock","setInStock","count","setCount","count1","setCount1","counts","setCounts","fetch","then","res","json","data","total_out_of_stock","createElement","container","spacing","style","paddingLeft","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","item","xs","lg","sm","marginTop","primary","secondary","iconPrimary","iconFooter","direction","chartData","type","options","chart","sparkline","enabled","colors","tooltip","fixed","y","title","formatter","seriesName","marker","show","series","name","dataLabels","labels","legend","position","fontFamily","itemMargin","horizontal","vertical","info"],"sources":["C:/logs/webcam project/frontend/src/views/Dashboard/Default/index.js"],"sourcesContent":["import React from \"react\";\nimport {\n  makeStyles,\n  Grid,\n  Card,\n  CardHeader,\n  CardContent,\n  Hidden,\n  Typography,\n  Divider,\n  LinearProgress,\n} from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport value from '../../../assets/scss/_themes-vars.scss';\n\nimport TrendingUpIcon from \"@material-ui/icons/TrendingUp\";\nimport TrendingDownIcon from \"@material-ui/icons/TrendingDown\";\n// import MonetizationOnTwoTone from '@material-ui/icons/MonetizationOnTwoTone';\nimport DvrIconTwoTone from \"@material-ui/icons/DvrTwoTone\";\nimport DescriptionTwoTone from \"@material-ui/icons/DescriptionTwoTone\";\n// import ThumbUpAltTwoTone from '@material-ui/icons/ThumbUpAltTwoTone';\nimport IndeterminateCheckBoxTwoToneIcon from \"@material-ui/icons/IndeterminateCheckBoxTwoTone\";\nimport CalendarTodayTwoTone from \"@material-ui/icons/CalendarTodayTwoTone\";\n\nimport SalesLineCard from \"./SalesLineCard\";\nimport SalesLineCardData from \"./chart/sale-chart-1\";\n\nimport RevenuChartCard from \"./RevenuChartCard\";\nimport RevenuChartCardData from \"./chart/revenu-chart\";\n\nimport ReportCard from \"./ReportCard\";\nimport LatestorderCard from \"./LatestorderCard\";\n\nimport { gridSpacing } from \"./../../../store/constant\";\n\nconst useStyles = makeStyles((theme) => ({\n  arrowicon: {\n    \"& svg\": {\n      width: \"20px\",\n      height: \"20px\",\n      verticalAlign: \"top\",\n    },\n  },\n  flatcardbody: {\n    padding: \"0px !important\",\n    \"& svg\": {\n      width: \"40px\",\n      height: \"40px\",\n    },\n  },\n  flatcardblock: {\n    padding: \"25px 25px\",\n    borderLeft: \"1px solid\" + theme.palette.background.default,\n    [theme.breakpoints.down(\"xs\")]: {\n      borderLeft: \"none\",\n      borderBottom: \"10px solid\" + theme.palette.background.default,\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      borderBottom: \"10px solid\" + theme.palette.background.default,\n    },\n  },\n  textsuccess: {\n    color: theme.palette.success.main,\n  },\n  texterror: {\n    color: theme.palette.error.main,\n  },\n}));\n\nconst Default = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [totalItems, setTotalItems] = useState();\n  const [instock, setInStock] = useState();\n  const [count, setCount] = useState(0);\n  const [count1, setCount1] = useState(0);\n  const [counts, setCounts] = useState(0);\n\n  useEffect(() => {\n      fetch('http://localhost:5000/outofstock')\n          .then((res) => res.json())\n          .then((data) => {\n              setCounts(data[0].total_out_of_stock);\n          });\n      fetch('http://localhost:5000/count')\n          .then((res) => res.json())\n          .then((data) => {\n              setCount(data[0].count);\n          });\n      fetch('http://localhost:5000/data/count')\n          .then((res) => res.json())\n          .then((data) => {\n              setCount1(data.count1);\n          });\n      //fetchTest();\n  }, []);\n\n  \n\n  return (\n    <Grid container spacing={gridSpacing} style={{ paddingLeft: \"2rem\" }}>\n\n      <Grid item xs={9}>\n        <Grid container spacing={gridSpacing}>\n          <Grid item lg={4} sm={6} xs={12} style={{ marginTop: \"75px\" }}>\n            <ReportCard\n              // primary={totalItems}\n              primary={count}\n              secondary=\"Total Items\"\n              color={theme.palette.primary.main}\n              // footerData=\"10% changes on profit\"\n              iconPrimary={DvrIconTwoTone}\n              iconFooter={TrendingUpIcon}\n            />\n          </Grid>\n          {/* <Grid item lg={3} sm={6} xs={12}>\n                        <ReportCard\n                            primary={145}\n                            secondary=\"Number of categories\"\n                            color={theme.palette.primary.main}\n                            // footerData=\"28% task performance\"\n                            iconPrimary={CalendarTodayTwoTone}\n                            iconFooter={TrendingDownIcon}\n                        />\n                    </Grid> */}\n          <Grid item lg={4} sm={6} xs={12} style={{ marginTop: \"75px\" }}>\n            <ReportCard\n              primary={count1}\n              secondary=\"Incoming Stock\"\n              color={theme.palette.success.main}\n              // footerData=\"10k daily views\"\n              iconPrimary={DescriptionTwoTone}\n              iconFooter={TrendingUpIcon}\n            />\n          </Grid>\n          <Grid item lg={4} sm={6} xs={12} style={{ marginTop: \"75px\" }}>\n            <ReportCard\n              primary={counts}\n              secondary=\"Out of Stock\"\n              color={theme.palette.primary.main}\n              // footerData=\"1k download in App store\"\n              iconPrimary={IndeterminateCheckBoxTwoToneIcon}\n              iconFooter={TrendingUpIcon}\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item xs={9}>\n        <Grid container spacing={gridSpacing}>\n          <Grid item lg={14} xs={12}>\n            <Grid container spacing={gridSpacing}>\n              <Grid item xs={12} sm={6}>\n                <Grid container spacing={gridSpacing} direction=\"column\">\n                  <Grid item xs={12}>\n                    {/* bar chart to go here */}\n\n                    <SalesLineCard\n                     chartData = {{\n                        type: 'bar',\n                        height: 115,\n                        options: {\n                            chart: {\n                                sparkline: {\n                                    enabled: true,\n                                },\n                            },\n                            // dataLabels: {\n                            //     enabled: true,\n                            // },\n                            colors: ['#fff'],\n                    \n                            // xaxis: {\n                            //     categories: ['item 1', 'item 2', 'item 3', 'item 4', 'item 5'],\n                            // },\n                            tooltip: {\n                                theme: 'dark',\n                                fixed: {\n                                    enabled: false,\n                                },\n                                // x: {\n                                //     show: false,\n                                // },\n                                y: {\n                                    title: {\n                                        formatter: (seriesName) => 'Sales/Order Per Day',\n                                    },\n                                },\n                                marker: {\n                                    show: false,\n                                },\n                            },\n                        },\n                        series: [\n                            // {\n                            //     name: 'series1',\n                            //     data: [55, 35, 75, 25, 90, 50],\n                            // },\n                            {\n                                name: 'added to inventory',\n                                \n                                data: [count, count1, counts, 1972, 1516, 2722, 2080, 2063, 1972, 1516, 2722, 2080, 2063, 1972, 1516, 2722, 2080, 2063, 1972,2080],\n                            },\n                        ]\n                    }}\n                    />\n            </Grid>\n                      {/* chartData={SalesLineCardData}\n                       title=\"Sales Per Day\"\n                       percentage=\"3%\"\n                       icon={<TrendingDownIcon />}\n                       footerData={[ \n                         {\n                    //       value: \"2272 +\",\n                    //       label: \"Max \",\n                    //     },\n                    //     {\n                    //       value: \"1516 +\",\n                    //       label: \"Least \",\n                    //     },\n                    //   ]}\n                \n                \n                  {/* <Hidden only=\"sm\">\n                                        <Grid item xs={12}>\n                                            <Card>\n                                                <CardContent className={classes.flatcardbody}>\n                                                    <Grid container alignItems=\"center\" spacing={0}>\n                                                        <Grid item sm={6} xs={12} className={classes.flatcardblock}>\n                                                            <Grid container alignItems=\"center\" spacing={1}>\n                                                                <Grid item>\n                                                                    <Typography variant=\"subtitle2\" align=\"left\">\n                                                                        REALTY\n                                                                    </Typography>\n                                                                </Grid>\n                                                                <Grid item sm zeroMinWidth>\n                                                                    <Typography variant=\"h5\" align=\"right\">\n                                                                        -0.99\n                                                                    </Typography>\n                                                                </Grid>\n                                                            </Grid>\n                                                        </Grid>\n                                                        <Grid item sm={6} xs={12} className={classes.flatcardblock}>\n                                                            <Grid container alignItems=\"center\" spacing={1}>\n                                                                <Grid item>\n                                                                    <Typography variant=\"subtitle2\" align=\"left\">\n                                                                        INFRA\n                                                                    </Typography>\n                                                                </Grid>\n                                                                <Grid item sm zeroMinWidth>\n                                                                    <Typography variant=\"h5\" className={classes.textsuccess} align=\"right\">\n                                                                        -7.66\n                                                                    </Typography>\n                                                                </Grid>\n                                                            </Grid>\n                                                        </Grid>\n                                                    </Grid>\n                                                </CardContent>\n                                            </Card>\n                                        </Grid>\n                                    </Hidden> */}\n                </Grid>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n              <RevenuChartCard\n                                        chartData={{\n                                            height: 228,\n                                            type: 'pie',\n                                            options: {\n                                                dataLabels: {\n                                                    enabled: false,\n                                                },\n                                                labels: ['Total Items', 'Incoming', 'Outgoing'],\n                                                legend: {\n                                                    show: true,\n                                                    position: 'bottom',\n                                                    fontFamily: 'inherit',\n                                                    labels: {\n                                                        colors: 'inherit',\n                                                    },\n                                                },\n                                                itemMargin: {\n                                                    horizontal: 10,\n                                                    vertical: 10,\n                                                },\n                                                colors: [value.error, value.primary, value.info],\n                                            },\n                                            series: [count, count1, counts],\n                                        }}\n                                    />\n              </Grid>\n            </Grid>\n          </Grid>\n          {/* Progress report tables here */}\n          {/* <Grid item lg={4} xs={12}>\n                        <Card>\n                            <CardHeader\n                                title={\n                                    <Typography component=\"div\" className=\"card-header\">\n                                        Traffic Sources\n                                    </Typography>\n                                }\n                            />\n                            <Divider />\n                            <CardContent>\n                                <Grid container spacing={gridSpacing}>\n                                    <Grid item xs={12}>\n                                        <Grid container alignItems=\"center\" spacing={1}>\n                                            <Grid item sm zeroMinWidth>\n                                                <Typography variant=\"body2\">Direct</Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Typography variant=\"body2\" align=\"right\">\n                                                    80%\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item xs={12}>\n                                                <LinearProgress variant=\"determinate\" value={80} color=\"primary\" />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid container alignItems=\"center\" spacing={1}>\n                                            <Grid item sm zeroMinWidth>\n                                                <Typography variant=\"body2\">Social</Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Typography variant=\"body2\" align=\"right\">\n                                                    50%\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item xs={12}>\n                                                <LinearProgress variant=\"determinate\" value={50} color=\"secondary\" />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid container alignItems=\"center\" spacing={1}>\n                                            <Grid item sm zeroMinWidth>\n                                                <Typography variant=\"body2\">Referral</Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Typography variant=\"body2\" align=\"right\">\n                                                    20%\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item xs={12}>\n                                                <LinearProgress variant=\"determinate\" value={20} color=\"primary\" />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid container alignItems=\"center\" spacing={1}>\n                                            <Grid item sm zeroMinWidth>\n                                                <Typography variant=\"body2\">Bounce</Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Typography variant=\"body2\" align=\"right\">\n                                                    60%\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item xs={12}>\n                                                <LinearProgress variant=\"determinate\" value={60} color=\"secondary\" />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid container alignItems=\"center\" spacing={1}>\n                                            <Grid item sm zeroMinWidth>\n                                                <Typography variant=\"body2\">Internet</Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Typography variant=\"body2\" align=\"right\">\n                                                    40%\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item xs={12}>\n                                                <LinearProgress variant=\"determinate\" value={40} color=\"primary\" />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </CardContent>\n                        </Card>\n                    </Grid> */}\n        </Grid>\n      </Grid>\n      <Grid item xs={10}>\n        <LatestorderCard title=\"Latest Order\" />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Default;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}