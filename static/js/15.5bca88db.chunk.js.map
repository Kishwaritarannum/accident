{"version":3,"sources":["component/Breadcrumb/index.js","views/MultiLanguage/index.js"],"names":["useStyles","makeStyles","theme","root","background","boxShadow","border","cardClass","padding","spacing","cardContent","paddingLeft","paddingTop","paddingBottom","divider","marginBottom","marginTop","spacer","breadcrumbTitle","fontWeight","Breadcrumbs","props","classes","title","color","outline","size","isCard","rest","_objectWithoutProperties","_excluded","React","createElement","Card","className","CardContent","MuiBreadcrumbs","Typography","variant","Divider","MultiLanguage","customization","useSelector","state","dispatch","useDispatch","_React$useState","useState","locale","_React$useState2","_slicedToArray","language","setLanguage","useEffect","Fragment","Breadcrumb","FormattedMessage","id","component","Link","to","Grid","container","gridSpacing","item","CardHeader","Box","mb","FormControl","FormLabel","RadioGroup","row","aria-label","name","value","onChange","event","target","type","actionTypes","FormControlLabel","control","Radio","label"],"mappings":"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","file":"static/js/15.5bca88db.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles, Card, CardContent, Typography, Divider } from '@material-ui/core';\n\nimport MuiBreadcrumbs from '@material-ui/core/Breadcrumbs';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        background: 'transparent',\n        boxShadow: 'none',\n        border: 'none',\n    },\n    cardClass: {\n        padding: theme.spacing(3),\n    },\n    cardContent: {\n        paddingLeft: 0,\n        paddingTop: 0,\n        paddingBottom: '0 !important',\n    },\n    divider: {\n        marginBottom: theme.spacing(3),\n        marginTop: theme.spacing(2),\n    },\n    spacer: {\n        marginBottom: theme.spacing(3),\n    },\n    breadcrumbTitle: {\n        fontWeight: 500,\n        marginTop: theme.spacing(1),\n    },\n}));\n\nconst Breadcrumbs = (props) => {\n    const classes = useStyles();\n    const { color, outline, size, title, divider, isCard, ...rest } = props;\n    let cardClass = classes.root;\n    if (isCard) {\n        cardClass = classes.cardClass;\n    }\n\n    return (\n        <Card className={cardClass}>\n            <CardContent className={classes.cardContent}>\n                <MuiBreadcrumbs {...rest} />\n                {title && (\n                    <Typography className={classes.breadcrumbTitle} variant=\"h3\">\n                        {title}\n                    </Typography>\n                )}\n                {divider === false && !isCard && <div className={classes.spacer} />}\n                {divider !== false && <Divider className={classes.divider} />}\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default Breadcrumbs;\n","import React, { useEffect } from 'react';\nimport {\n    Box,\n    Card,\n    CardHeader,\n    CardContent,\n    Divider,\n    Grid,\n    Typography,\n    FormControl,\n    FormLabel,\n    RadioGroup,\n    FormControlLabel,\n    Radio,\n} from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport Breadcrumb from './../../component/Breadcrumb';\nimport { gridSpacing } from '../../store/constant';\nimport * as actionTypes from '../../store/actions';\n\nconst MultiLanguage = () => {\n    const customization = useSelector((state) => state.customization);\n    const dispatch = useDispatch();\n\n    const [language, setLanguage] = React.useState(customization.locale);\n\n    const handleChange = (event) => {\n        setLanguage(event.target.value);\n        dispatch({ type: actionTypes.THEME_LOCALE, locale: event.target.value });\n    };\n\n    useEffect(() => {\n        setLanguage(customization.locale);\n    }, [customization]);\n\n    return (\n        <React.Fragment>\n            <Breadcrumb title={<FormattedMessage id=\"title\" />}>\n                <Typography component={Link} to=\"/\" variant=\"subtitle2\" color=\"inherit\" className=\"link-breadcrumb\">\n                    <FormattedMessage id=\"home\" />\n                </Typography>\n                <Typography variant=\"subtitle2\" color=\"primary\" className=\"link-breadcrumb\">\n                    <FormattedMessage id=\"title\" />\n                </Typography>\n            </Breadcrumb>\n            <Grid container spacing={gridSpacing}>\n                <Grid item>\n                    <Card>\n                        <CardHeader\n                            title={\n                                <Typography component=\"div\" className=\"card-header\">\n                                    <FormattedMessage id=\"title\" />\n                                </Typography>\n                            }\n                        />\n                        <Divider />\n                        <CardContent>\n                            <Box mb={3}>\n                                <FormControl component=\"fieldset\">\n                                    <FormLabel component=\"legend\">\n                                        <FormattedMessage id=\"change\" />\n                                    </FormLabel>\n                                    <RadioGroup row aria-label=\"position\" name=\"position\" value={language} onChange={handleChange}>\n                                        <FormControlLabel value=\"en\" control={<Radio color=\"primary\" />} label=\"English\" />\n                                        <FormControlLabel value=\"fr\" control={<Radio color=\"primary\" />} label=\"français\" />\n                                        <FormControlLabel value=\"ro\" control={<Radio color=\"primary\" />} label=\"Română\" />\n                                        <FormControlLabel value=\"zh\" control={<Radio color=\"primary\" />} label=\"中国人\" />\n                                    </RadioGroup>\n                                </FormControl>\n                            </Box>\n\n                            <Typography variant=\"body2\">\n                                <FormattedMessage id=\"message\" />\n                            </Typography>\n                        </CardContent>\n                    </Card>\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    );\n};\n\nexport default MultiLanguage;\n"],"sourceRoot":""}